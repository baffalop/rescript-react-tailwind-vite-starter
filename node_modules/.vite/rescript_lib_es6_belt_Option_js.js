import {
  some,
  valFromOption
} from "./chunk-KPCANFTN.js";
import "./chunk-VK5M77CT.js";

// node_modules/rescript/lib/es6/caml_array.js
function sub(x, offset, len) {
  var result = new Array(len);
  var j = 0;
  var i = offset;
  while (j < len) {
    result[j] = x[i];
    j = j + 1 | 0;
    i = i + 1 | 0;
  }
  ;
  return result;
}

// node_modules/rescript/lib/es6/curry.js
function app(_f, _args) {
  while (true) {
    var args = _args;
    var f = _f;
    var init_arity = f.length;
    var arity = init_arity === 0 ? 1 : init_arity;
    var len = args.length;
    var d = arity - len | 0;
    if (d === 0) {
      return f.apply(null, args);
    }
    if (d >= 0) {
      return function(f2, args2) {
        return function(x) {
          return app(f2, args2.concat([x]));
        };
      }(f, args);
    }
    _args = sub(args, arity, -d | 0);
    _f = f.apply(null, sub(args, 0, arity));
    continue;
  }
  ;
}
function _1(o, a0) {
  var arity = o.length;
  if (arity === 1) {
    return o(a0);
  } else {
    switch (arity) {
      case 1:
        return o(a0);
      case 2:
        return function(param) {
          return o(a0, param);
        };
      case 3:
        return function(param, param$1) {
          return o(a0, param, param$1);
        };
      case 4:
        return function(param, param$1, param$2) {
          return o(a0, param, param$1, param$2);
        };
      case 5:
        return function(param, param$1, param$2, param$3) {
          return o(a0, param, param$1, param$2, param$3);
        };
      case 6:
        return function(param, param$1, param$2, param$3, param$4) {
          return o(a0, param, param$1, param$2, param$3, param$4);
        };
      case 7:
        return function(param, param$1, param$2, param$3, param$4, param$5) {
          return o(a0, param, param$1, param$2, param$3, param$4, param$5);
        };
      default:
        return app(o, [a0]);
    }
  }
}
function __1(o) {
  var arity = o.length;
  if (arity === 1) {
    return o;
  } else {
    return function(a0) {
      return _1(o, a0);
    };
  }
}
function _2(o, a0, a1) {
  var arity = o.length;
  if (arity === 2) {
    return o(a0, a1);
  } else {
    switch (arity) {
      case 1:
        return app(o(a0), [a1]);
      case 2:
        return o(a0, a1);
      case 3:
        return function(param) {
          return o(a0, a1, param);
        };
      case 4:
        return function(param, param$1) {
          return o(a0, a1, param, param$1);
        };
      case 5:
        return function(param, param$1, param$2) {
          return o(a0, a1, param, param$1, param$2);
        };
      case 6:
        return function(param, param$1, param$2, param$3) {
          return o(a0, a1, param, param$1, param$2, param$3);
        };
      case 7:
        return function(param, param$1, param$2, param$3, param$4) {
          return o(a0, a1, param, param$1, param$2, param$3, param$4);
        };
      default:
        return app(o, [
          a0,
          a1
        ]);
    }
  }
}
function __2(o) {
  var arity = o.length;
  if (arity === 2) {
    return o;
  } else {
    return function(a0, a1) {
      return _2(o, a0, a1);
    };
  }
}

// node_modules/rescript/lib/es6/belt_Option.js
function keepU(opt, p) {
  if (opt !== void 0 && p(valFromOption(opt))) {
    return opt;
  }
}
function keep(opt, p) {
  return keepU(opt, __1(p));
}
function forEachU(opt, f) {
  if (opt !== void 0) {
    return f(valFromOption(opt));
  }
}
function forEach(opt, f) {
  return forEachU(opt, __1(f));
}
function getExn(x) {
  if (x !== void 0) {
    return valFromOption(x);
  }
  throw {
    RE_EXN_ID: "Not_found",
    Error: new Error()
  };
}
function mapWithDefaultU(opt, $$default, f) {
  if (opt !== void 0) {
    return f(valFromOption(opt));
  } else {
    return $$default;
  }
}
function mapWithDefault(opt, $$default, f) {
  return mapWithDefaultU(opt, $$default, __1(f));
}
function mapU(opt, f) {
  if (opt !== void 0) {
    return some(f(valFromOption(opt)));
  }
}
function map(opt, f) {
  return mapU(opt, __1(f));
}
function flatMapU(opt, f) {
  if (opt !== void 0) {
    return f(valFromOption(opt));
  }
}
function flatMap(opt, f) {
  return flatMapU(opt, __1(f));
}
function getWithDefault(opt, $$default) {
  if (opt !== void 0) {
    return valFromOption(opt);
  } else {
    return $$default;
  }
}
function isSome(param) {
  return param !== void 0;
}
function isNone(x) {
  return x === void 0;
}
function eqU(a, b, f) {
  if (a !== void 0) {
    if (b !== void 0) {
      return f(valFromOption(a), valFromOption(b));
    } else {
      return false;
    }
  } else {
    return b === void 0;
  }
}
function eq(a, b, f) {
  return eqU(a, b, __2(f));
}
function cmpU(a, b, f) {
  if (a !== void 0) {
    if (b !== void 0) {
      return f(valFromOption(a), valFromOption(b));
    } else {
      return 1;
    }
  } else if (b !== void 0) {
    return -1;
  } else {
    return 0;
  }
}
function cmp(a, b, f) {
  return cmpU(a, b, __2(f));
}
export {
  cmp,
  cmpU,
  eq,
  eqU,
  flatMap,
  flatMapU,
  forEach,
  forEachU,
  getExn,
  getWithDefault,
  isNone,
  isSome,
  keep,
  keepU,
  map,
  mapU,
  mapWithDefault,
  mapWithDefaultU
};
//# sourceMappingURL=rescript_lib_es6_belt_Option_js.js.map
